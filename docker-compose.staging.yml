x-postgres-credentials: &postgres-credentials
  DATABASE_URL: ${DATABASE_URL}
  LOCAL_DB: "false"

x-storage-credentials: &storage-credentials
  AWS_S3_ACCESS_KEY_ID: ${STAGING_AWS_S3_ACCESS_KEY_ID}
  AWS_S3_SECRET_ACCESS_KEY: ${STAGING_AWS_S3_SECRET_ACCESS_KEY}
  AWS_STORAGE_BUCKET_NAME: ${STAGING_AWS_STORAGE_BUCKET_NAME}
  AWS_S3_ENDPOINT_URL: ${STAGING_AWS_S3_ENDPOINT_URL}
  AWS_S3_REGION_NAME: ${STAGING_AWS_S3_REGION_NAME}
  LOCAL_S3: "false"

name: turntable-staging

# Define services
services:
  api:
    extends:
      file: docker-compose.dev-internal.yml
      service: api
    command: ["django-admin", "start_server", "--mode", "staging"]
    environment:
      <<: [*postgres-credentials, *storage-credentials]

  web:
    extends:
      file: docker-compose.dev-internal.yml
      service: web


  # use internal redis due to issues connecting to external redis
  redis:
    extends:
      file: docker-compose.dev-internal.yml
      service: redis

  worker:
    extends:
      file: docker-compose.dev-internal.yml
      service: worker
    command: ["django-admin", "start_worker", "--mode", "staging"]
    environment:
      <<: [*postgres-credentials, *storage-credentials]

  scheduler:
    extends:
      file: docker-compose.dev-internal.yml
      service: worker
    command: ["django-admin", "start_beat", "--mode", "staging"]
    environment:
      <<: [*postgres-credentials, *storage-credentials]

  flower:
    extends:
      file: docker-compose.dev-internal.yml
      service: flower

  # Test resources
  postgres_test_db:
    extends:
      file: docker-compose.dev-internal.yml
      service: postgres_test_db

  populate_postgres_test_db:
    extends:
      file: docker-compose.dev-internal.yml
      service: populate_postgres_test_db

  ensure_populate_test_db:
    extends:
      file: docker-compose.dev-internal.yml
      service: ensure_populate_test_db

  metabase:
    extends:
      file: docker-compose.dev-internal.yml
      service: metabase

  postgres:
    extends:
      file: docker-compose.dev-internal.yml
      service: postgres

  createbuckets:
    extends:
      file: docker-compose.dev-internal.yml
      service: createbuckets

  minio:
    extends:
      file: docker-compose.dev-internal.yml
      service: minio

volumes:
  postgres_data:
  minio_data:
  postgres_test_db_data:
  frontend_data:
  code_repos:

networks:
  default:
    name: app_network_staging
    driver: bridge
