# Generated by Django 5.0.6 on 2024-08-15 16:22

import app.services.storage_backends
import app.utils.fields
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import uuid
import vinyl.lib.dbt_methods
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0002_assetembedding"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="ResourceDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "subtype",
                    models.CharField(
                        choices=[
                            ("looker", "Looker"),
                            ("metabase", "Metabase"),
                            ("bigquery", "BigQuery"),
                            ("snowflake", "Snowflake"),
                            ("postgres", "Postgres"),
                            ("duckdb", "File"),
                            ("file", "File"),
                        ],
                        max_length=255,
                    ),
                ),
                ("config", models.JSONField()),
                ("encrypted", app.utils.fields.EncryptedJSONField()),
            ],
        ),
        migrations.CreateModel(
            name="DBTResource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.TextField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("config", models.JSONField()),
                ("encrypted", app.utils.fields.EncryptedJSONField()),
                ("manifest_json", models.JSONField(null=True)),
                ("catalog_json", models.JSONField(null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="SSHKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("public_key", models.TextField()),
                ("private_key", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="WorkflowRun",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("FAILED", "Failed"),
                            ("SUCCESS", "Success"),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name="blocklink",
            name="source",
        ),
        migrations.RemoveField(
            model_name="blocklink",
            name="target",
        ),
        migrations.RemoveField(
            model_name="datahubcache",
            name="repository",
        ),
        migrations.RemoveField(
            model_name="datahubcache",
            name="resource",
        ),
        migrations.RemoveField(
            model_name="graph",
            name="repository",
        ),
        migrations.DeleteModel(
            name="Model",
        ),
        migrations.RemoveField(
            model_name="notebookblock",
            name="block",
        ),
        migrations.RemoveField(
            model_name="notebookblock",
            name="notebook",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="profile",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="github_installation",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="resource",
        ),
        migrations.RemoveField(
            model_name="asseterror",
            name="repository",
        ),
        migrations.RemoveField(
            model_name="assetembedding",
            name="repository",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="repository",
        ),
        migrations.RemoveIndex(
            model_name="asset",
            name="app_asset_tenant__1bfa58_idx",
        ),
        migrations.RemoveIndex(
            model_name="assetembedding",
            name="app_assetem_tenant__c8d070_idx",
        ),
        migrations.RemoveIndex(
            model_name="asseterror",
            name="app_asseter_tenant__9459a7_idx",
        ),
        migrations.RemoveIndex(
            model_name="assetlink",
            name="app_assetli_tenant__892d3c_idx",
        ),
        migrations.RemoveIndex(
            model_name="block",
            name="app_block_tenant__384a0e_idx",
        ),
        migrations.RemoveIndex(
            model_name="column",
            name="app_column_tenant__52b435_idx",
        ),
        migrations.RemoveIndex(
            model_name="columnlink",
            name="app_columnl_source__63add0_idx",
        ),
        migrations.RemoveIndex(
            model_name="columnlink",
            name="app_columnl_tenant__ff88eb_idx",
        ),
        migrations.RemoveIndex(
            model_name="githubinstallation",
            name="app_githubi_tenant__f7e3ea_idx",
        ),
        migrations.RemoveIndex(
            model_name="resource",
            name="app_resourc_tenant__c71d5f_idx",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="read_only",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="status",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="asset",
            name="viewers",
        ),
        migrations.RemoveField(
            model_name="assetembedding",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="asseterror",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="assetlink",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="assetlink",
            name="type",
        ),
        migrations.RemoveField(
            model_name="block",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="block",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="block",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="column",
            name="errors",
        ),
        migrations.RemoveField(
            model_name="column",
            name="is_fk",
        ),
        migrations.RemoveField(
            model_name="column",
            name="is_pk",
        ),
        migrations.RemoveField(
            model_name="column",
            name="pii",
        ),
        migrations.RemoveField(
            model_name="column",
            name="table_unique_name",
        ),
        migrations.RemoveField(
            model_name="column",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="column",
            name="unique",
        ),
        migrations.RemoveField(
            model_name="columnlink",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="githubinstallation",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="githubinstallation",
            name="user_id",
        ),
        migrations.RemoveField(
            model_name="notebook",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="notebook",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="config",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="github_repo_id",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="tables",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="tenant_id",
        ),
        migrations.RemoveField(
            model_name="resource",
            name="updated_by",
        ),
        migrations.AddField(
            model_name="asset",
            name="sql",
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name="asset",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="assetembedding",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="asseterror",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="assetlink",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="block",
            name="notebook",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="blocks",
                to="app.notebook",
            ),
        ),
        migrations.AddField(
            model_name="block",
            name="resource",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="blocks",
                to="app.resource",
            ),
        ),
        migrations.AddField(
            model_name="block",
            name="results",
            field=models.FileField(
                null=True,
                storage=app.services.storage_backends.CustomS3Boto3Storage(),
                upload_to="results/",
            ),
        ),
        migrations.AddField(
            model_name="column",
            name="nullable",
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name="column",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="columnlink",
            name="confidence",
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name="columnlink",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="git_repo_type",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="git_url",
            field=models.URLField(null=True),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="main_git_branch",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="name",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="ssh_key",
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="githubinstallation",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="notebook",
            name="author",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="notebooks",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="notebook",
            name="contents",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="notebook",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notebooks",
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="creator",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="datahub_db",
            field=models.FileField(null=True, upload_to="datahub_dbs/"),
        ),
        migrations.AddField(
            model_name="resource",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="workspace",
            name="icon_file",
            field=models.ImageField(
                blank=True,
                null=True,
                storage=app.services.storage_backends.PublicMediaStorage(),
                upload_to="assets/icons/",
            ),
        ),
        migrations.AlterField(
            model_name="asset",
            name="db_location",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=255),
                blank=True,
                null=True,
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="asset",
            name="id",
            field=models.TextField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="asset",
            name="materialization",
            field=models.TextField(
                choices=[
                    ("view", "View"),
                    ("table", "Table"),
                    ("materialized_view", "Materialized View"),
                    ("ephemeral", "Ephemeral"),
                ],
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="assetlink",
            name="id",
            field=models.TextField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="block",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="block",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name="column",
            name="id",
            field=models.TextField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="column",
            name="name",
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name="column",
            name="type",
            field=models.TextField(null=True),
        ),
        migrations.AlterField(
            model_name="columnlink",
            name="id",
            field=models.TextField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="columnlink",
            name="lineage_type",
            field=models.CharField(
                choices=[("all", "All"), ("direct_only", "Direct Only")],
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="githubinstallation",
            name="id",
            field=models.CharField(
                default=uuid.uuid4, max_length=255, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name="notebook",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="notebook",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="resource",
            name="type",
            field=models.TextField(
                choices=[("db", "Database"), ("bi", "BI Tool")], null=True
            ),
        ),
        migrations.AlterField(
            model_name="workspace",
            name="id",
            field=models.CharField(
                default=uuid.uuid4,
                editable=False,
                max_length=255,
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(
                fields=["workspace_id"], name="app_asset_workspa_f5721a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assetembedding",
            index=models.Index(
                fields=["workspace_id"], name="app_assetem_workspa_01aa20_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asseterror",
            index=models.Index(
                fields=["workspace_id"], name="app_asseter_workspa_b49433_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assetlink",
            index=models.Index(
                fields=["workspace_id"], name="app_assetli_workspa_e0ae34_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="column",
            index=models.Index(
                fields=["workspace_id"], name="app_column_workspa_f8b31e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="columnlink",
            index=models.Index(
                fields=["workspace_id"], name="app_columnl_workspa_660691_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="columnlink",
            index=models.Index(
                fields=["source_id"], name="app_columnl_source__d14bd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="columnlink",
            index=models.Index(
                fields=["target_id"], name="app_columnl_target__fc5751_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="githubinstallation",
            index=models.Index(
                fields=["workspace_id"], name="app_githubi_workspa_890585_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(
                fields=["workspace_id"], name="app_resourc_workspa_c9e70d_idx"
            ),
        ),
        migrations.CreateModel(
            name="DataFileDetails",
            fields=[
                (
                    "resourcedetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.resourcedetails",
                    ),
                ),
                ("path", models.TextField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.resourcedetails",),
        ),
        migrations.CreateModel(
            name="DBDetails",
            fields=[
                (
                    "resourcedetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.resourcedetails",
                    ),
                ),
                ("lookback_days", models.IntegerField(null=True)),
                (
                    "database_include",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "database_exclude",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "schema_include",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "schema_exclude",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "table_include",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "table_exclude",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                ("use_only_dbt_schemas", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.resourcedetails",),
        ),
        migrations.CreateModel(
            name="LookerDetails",
            fields=[
                (
                    "resourcedetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.resourcedetails",
                    ),
                ),
                ("base_url", models.URLField()),
                ("client_id", models.CharField(max_length=255)),
                ("client_secret", models.CharField(max_length=255)),
                ("github_repo_id", models.IntegerField(null=True)),
                ("project_path", models.CharField(max_length=255, null=True)),
                (
                    "github_installation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.githubinstallation",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.resourcedetails",),
        ),
        migrations.CreateModel(
            name="MetabaseDetails",
            fields=[
                (
                    "resourcedetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.resourcedetails",
                    ),
                ),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("connect_uri", models.URLField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.resourcedetails",),
        ),
        migrations.AddField(
            model_name="resourcedetails",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="resourcedetails",
            name="resource",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="details",
                to="app.resource",
            ),
        ),
        migrations.AddField(
            model_name="resourcedetails",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.CreateModel(
            name="DBTCloudDetails",
            fields=[
                (
                    "dbtresource_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbtresource",
                    ),
                ),
                ("api_token", models.CharField(max_length=255)),
                ("account_id", models.CharField(max_length=255)),
                ("project_id", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbtresource",),
        ),
        migrations.CreateModel(
            name="DBTCoreDetails",
            fields=[
                (
                    "dbtresource_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbtresource",
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        choices=[("core", "Core"), ("cloud", "Cloud")], max_length=255
                    ),
                ),
                ("github_repo_id", models.IntegerField(null=True)),
                ("project_path", models.CharField(max_length=255)),
                ("database", models.CharField(max_length=255)),
                ("schema", models.CharField(max_length=255)),
                (
                    "other_schemas",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        null=True,
                        size=None,
                    ),
                ),
                ("threads", models.IntegerField(default=1, null=True)),
                (
                    "version",
                    models.CharField(
                        choices=[
                            (vinyl.lib.dbt_methods.DBTVersion["V1_3"], "1.3"),
                            (vinyl.lib.dbt_methods.DBTVersion["V1_4"], "1.4"),
                            (vinyl.lib.dbt_methods.DBTVersion["V1_5"], "1.5"),
                            (vinyl.lib.dbt_methods.DBTVersion["V1_6"], "1.6"),
                            (vinyl.lib.dbt_methods.DBTVersion["V1_7"], "1.7"),
                        ],
                        max_length=255,
                    ),
                ),
                ("env_vars", models.JSONField(null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbtresource",),
        ),
        migrations.AddField(
            model_name="dbtresource",
            name="creator",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="dbtresource",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="dbtresource",
            name="resource",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.resource",
            ),
        ),
        migrations.AddField(
            model_name="dbtresource",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="sshkey",
            name="workspace",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="workflowrun",
            name="resource",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workflow_runs",
                to="app.resource",
            ),
        ),
        migrations.DeleteModel(
            name="BlockLink",
        ),
        migrations.DeleteModel(
            name="DatahubCache",
        ),
        migrations.DeleteModel(
            name="Graph",
        ),
        migrations.DeleteModel(
            name="NotebookBlock",
        ),
        migrations.DeleteModel(
            name="Profile",
        ),
        migrations.DeleteModel(
            name="Repository",
        ),
        migrations.CreateModel(
            name="BigqueryDetails",
            fields=[
                (
                    "dbdetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbdetails",
                    ),
                ),
                ("service_account", models.JSONField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbdetails",),
        ),
        migrations.CreateModel(
            name="DuckDBDetails",
            fields=[
                (
                    "dbdetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbdetails",
                    ),
                ),
                ("path", models.TextField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbdetails",),
        ),
        migrations.CreateModel(
            name="PostgresDetails",
            fields=[
                (
                    "dbdetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbdetails",
                    ),
                ),
                ("host", models.CharField(max_length=255)),
                ("port", models.IntegerField()),
                ("database", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbdetails",),
        ),
        migrations.CreateModel(
            name="SnowflakeDetails",
            fields=[
                (
                    "dbdetails_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.dbdetails",
                    ),
                ),
                ("account", models.CharField(max_length=255)),
                ("warehouse", models.CharField(max_length=255)),
                ("database", models.CharField(max_length=255)),
                ("schema", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("role", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("app.dbdetails",),
        ),
        migrations.AddIndex(
            model_name="resourcedetails",
            index=models.Index(
                fields=["resource_id"], name="app_resourc_resourc_4c9b2d_idx"
            ),
        ),
        migrations.AddField(
            model_name="dbtcoredetails",
            name="github_installation",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.githubinstallation",
            ),
        ),
        migrations.AddIndex(
            model_name="sshkey",
            index=models.Index(
                fields=["workspace_id"], name="app_sshkey_workspa_cacad8_idx"
            ),
        ),
    ]
