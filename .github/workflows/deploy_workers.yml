name: Deploy Workers(Helper)

on:
  workflow_call:
    inputs:
      blueprint_name:
        required: true
        type: string

jobs:
  deploy_service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_name: ['worker_2', 'worker']
      # Run sequentially to ensure at least one worker is running
      max-parallel: 1
    steps:
      - name: Install render cli
        run: |
          curl -fsSL https://raw.githubusercontent.com/render-oss/cli/refs/heads/main/bin/install.sh | sh

          
      - name: Load secrets from One Password
        uses: 1password/load-secrets-action@v2
        with:
          # Export loaded secrets as environment variables
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          RENDER_API_KEY: op://Env/Render/api_key
          API_SERVICE_ID: op://Env/Render-${{ inputs.blueprint_name }}/api_service_id
          SERVICE_ID: op://Env/Render-${{ inputs.blueprint_name }}/${{ matrix.service_name }}_service_id
          SSH_DOMAIN: op://Env/Render-${{ inputs.blueprint_name }}/ssh_domain

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/github-host.key
          chmod 600 ~/.ssh/github-host.key
          cat >>~/.ssh/config <<END
          Host github-host
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github-host.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ env.API_SERVICE_ID }}
          SSH_KEY: ${{ secrets.RENDER_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ env.SSH_DOMAIN }}


      - name: Suspend worker via ssh
        run: |
          ssh -t github-host "django-admin suspend_worker --hostname ${{ env.SERVICE_ID }} --inexact-hostname"

      - name: Redeploy worker
        id: redeploy_worker
        continue-on-error: true # if deployment fails, we still want to resume the worker
        run: |
          render deploys create ${{ env.SERVICE_ID }} --commit ${{ github.sha }} --wait -o text --confirm 

      - name: Resume worker via ssh
        run: |
          ssh -t github-host "django-admin resume_worker --hostname ${{ env.SERVICE_ID }} --inexact-hostname"

      - name: Handle redeploy failure
        if: steps.redeploy_worker.outcome == 'failure'
        run: |
          echo "Warning: Failed to redeploy worker, but resumed original worker"
          exit 1

