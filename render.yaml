# This is a basic example Blueprint for a Django web service and
# the PostgreSQL database it connects to.
services:
  - type: web # A Python web service named django-app running on a free instance
    plan: pro
    name: turntable-django
    region: "ohio"
    runtime: docker
    dockerfilePath: backend/Dockerfile
    healthCheckPath: /healthcheck
    dockerContext: backend
    repo: https://github.com/turntable-so/notebook.git
    branch: oss
    dockerCommand: "python -m gunicorn api.asgi:application -k uvicorn.workers.UvicornWorker"
    preDeployCommand: "bash ./predeploy.sh"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: turntable-app-db
          property: connectionString
      - fromGroup: storage-credentials
      - fromGroup: ai-services

  - type: worker
    plan: pro
    name: turntable-hatchet-worker
    region: "ohio"
    runtime: docker
    dockerfilePath: backend/Dockerfile
    dockerContext: backend
    dockerCommand: "python workflows/main.py"
    repo: https://github.com/turntable-so/notebook.git
    branch: oss
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: turntable-app-db
          property: connectionString
      - key: GITHUB_APP_ID
        value: 312164
      - key: GITHUB_PRIVATE_KEY_BASE64
        sync: false
      - key: GITHUB_WEBHOOK_SECRET
        sync: false
      - key: ENCRYPTION_KEY
        sync: false
      - key: DJANGO_SETTINGS_MODULE
        value: api.settings
      - key: HATCHET_CLIENT_TOKEN
        sync: false
      - fromGroup: storage-credentials
      - fromGroup: ai-services
    disk:
      name: data
      mountPath: /data
      sizeGB: 25

databases:
  - name: turntable-app-db # A PostgreSQL database named django-app-db running on a free instance
    plan: pro
    region: "ohio"
