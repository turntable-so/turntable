x-dev-credentials: &dev-credentials
  GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
  SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
  SNOWFLAKE_USER: ${SNOWFLAKE_USER}
  SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
  GITHUB_APP_ID: 312164
  GITHUB_PRIVATE_KEY_BASE64: ${GITHUB_PRIVATE_KEY_BASE64}
  GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
  DEV: "true"

x-hatchet-credentials: &hatchet-credentials
  SERVER_LOGGER_LEVEL: warn
  DATABASE_LOGGER_LEVEL: warn

services:
  api:
    extends:
      file: docker-compose.demo.yml
      service: api
    build:
      args:
        - ENV=dev
    command:
      [
        "uvicorn",
        "api.asgi:application",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]
    environment:
      <<: *dev-credentials
    volumes:
      - ./backend:/code
    stdin_open: true
    tty: true

  web:
    extends:
      file: docker-compose.demo.yml
      service: web
    build:
      args:
        - ENV=dev
    restart: always
    command: ["pnpm", "dev"]
    environment:
      DEV: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  redis:
    extends:
      file: docker-compose.demo.yml
      service: redis

  postgres:
    extends:
      file: docker-compose.demo.yml
      service: postgres

  minio:
    extends:
      file: docker-compose.demo.yml
      service: minio

  createbuckets:
    extends:
      file: docker-compose.demo.yml
      service: createbuckets

  hatchet-lite:
    extends:
      file: docker-compose.demo.yml
      service: hatchet-lite
    environment:
      <<: *hatchet-credentials

  setup-hatchet:
    extends:
      file: docker-compose.demo.yml
      service: setup-hatchet

  worker:
    extends:
      file: docker-compose.demo.yml
      service: worker
    build:
      args:
        - ENV=dev
    environment:
      <<: *dev-credentials
    volumes:
      - ./backend:/code
    stdin_open: true
    tty: true

  ## Test resources
  postgres_test_db:
    extends:
      file: docker-compose.demo.yml
      service: postgres_test_db

  populate_postgres_test_db:
    extends:
      file: docker-compose.demo.yml
      service: populate_postgres_test_db

  ensure_populate_test_db:
    extends:
      file: docker-compose.demo.yml
      service: ensure_populate_test_db

  metabase:
    extends:
      file: docker-compose.demo.yml
      service: metabase

  ready:
    extends:
      file: docker-compose.demo.yml
      service: ready

volumes:
  postgres_data:
  minio_data:
  hatchet_lite_rabbitmq_data:
  hatchet_lite_config:
  hatchet_credentials_handoff:
  postgres_test_db_data:
  frontend_data:

networks:
  default:
    name: app_network
    driver: bridge
